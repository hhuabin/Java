<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd">

    <!--
        context:exclude-filter 排除扫描
        type=annotation | assignable
            annotation: 根据 注解类型 排除
            assignable: 根据 类的类型 排除

        context:include-filter 指定包含扫描, 需要设置 use-default-filters="false"
            true: （默认值） 所设置的包下所有的类都需要扫描，此时使用 context:exclude-filter
            false: 所设置的包下所有的类都不需要扫描，此时使用 context:include-filter
    -->

    <!--扫描组件-->
    <context:component-scan base-package="com.springioc" use-default-filters="true">
        <!--<context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"/>-->
        <!--<context:exclude-filter type="assignable" expression="com.spring.controller.UserController"/>-->
        <!--<context:include-filter type="annotation" expression="org.springframework.stereotype.Controller"/>-->
    </context:component-scan>

    <!--
        引入 jdbc.properties
        然后就可以通过 ${key} 的方式获得 value
    -->
    <context:property-placeholder location="classpath:jdbc.properties"></context:property-placeholder>

    <!--druid 数据库连接池-->
    <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource">
        <property name="driverClassName" value="${jdbc.driver}"></property>
        <property name="url" value="${jdbc.url}"></property>
        <property name="username" value="${jdbc.user}"></property>
        <property name="password" value="${jdbc.password}"></property>
    </bean>

    <bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
        <property name="dataSource" ref="dataSource"></property>
    </bean>

</beans>